{"ast":null,"code":"var _jsxFileName = \"/Users/tequam/Projects/memory-game/src/components/Cards.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport Card from './Card';\nimport { shuffledCards } from '../utils/ShuffleArray';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = () => {\n  _s();\n  const [cards, setCards] = useState(shuffledCards);\n  const [score, setScore] = useState(0);\n  const prevIndex = useRef(-1);\n  const disable = useRef(false);\n  const resetGame = () => {\n    setCards(shuffledCards);\n    prevIndex.current = -1;\n    setScore(0);\n  };\n  const handleCardClick = async index => {\n    const currCard = cards[index];\n    const prevCard = cards[prevIndex.current];\n    if (currCard.state === \"matched\" || disable.current) return;\n    updateStatus([currCard], \"flipped\");\n    if (!prevCard || prevIndex.current === index) {\n      prevIndex.current = index;\n      return;\n    }\n    if (currCard.id === prevCard.id) {\n      updateStatus([currCard, prevCard], \"matched\");\n      setScore(prevScore => prevScore + 1);\n    } else {\n      disable.current = true;\n      updateStatus([currCard, prevCard], \"\");\n      setScore(prevScore => prevScore - 1);\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      updateStatus([currCard, prevCard], \"flipped\");\n      disable.current = false;\n    }\n    prevIndex.current = -1;\n  };\n  const updateStatus = (cards1, state) => {\n    cards1.forEach(card => card.state = state);\n    setCards([...cards]);\n  };\n  const isGameOver = cards.every(card => card.state === \"matched\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n        card: card,\n        index: index,\n        onClick: handleCardClick\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), isGameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Game over! Your score is \", score, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetGame,\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Cards, \"Zz665+Pbekfdu6iMGHDPyLB+Vkc=\");\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useRef","useState","Card","shuffledCards","jsxDEV","_jsxDEV","Cards","_s","cards","setCards","score","setScore","prevIndex","disable","resetGame","current","handleCardClick","index","currCard","prevCard","state","updateStatus","id","prevScore","Promise","resolve","setTimeout","cards1","forEach","card","isGameOver","every","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["/Users/tequam/Projects/memory-game/src/components/Cards.tsx"],"sourcesContent":["import React, { useRef, useState } from 'react'\nimport Card from './Card'\nimport { shuffledCards } from '../utils/ShuffleArray';\nimport { CardType } from '../types/CardType';\n\nconst Cards = () => {\n  const [cards, setCards] = useState<CardType[]>(shuffledCards);\n  const [score, setScore] = useState(0);\n  const prevIndex = useRef(-1)\n  const disable = useRef(false)\n\n  const resetGame = () => {\n    setCards(shuffledCards)\n    prevIndex.current = -1\n    setScore(0)\n  }\n\n  const handleCardClick = async (index: number) => {\n    const currCard = cards[index]\n    const prevCard = cards[prevIndex.current]\n\n    if (currCard.state === \"matched\" || disable.current) return\n\n    updateStatus([currCard], \"flipped\")\n\n    if (!prevCard || prevIndex.current === index) {\n      prevIndex.current = index\n      return\n    }\n\n\n      if (currCard.id === prevCard.id) {\n        updateStatus([currCard, prevCard], \"matched\")\n        setScore((prevScore) => prevScore + 1)\n      } else {\n      disable.current = true;\n      updateStatus([currCard, prevCard], \"\");\n      setScore((prevScore) => prevScore - 1);\n\n      await new Promise((resolve) => setTimeout(resolve, 2000));\n\n      updateStatus([currCard, prevCard], \"flipped\");\n      disable.current = false;\n    }\n\n    prevIndex.current = -1\n  }\n\n  const updateStatus = (cards1: CardType[], state: 'flipped' | 'matched' | '') =>{\n      cards1.forEach((card) => (card.state = state))\n      setCards([...cards])\n  }\n\n  const isGameOver = cards.every((card) => card.state === \"matched\");\n\n  return(\n    <div className=\"game-wrapper\">\n      <div className=\"score\">\n        <button onClick={resetGame}>New Game</button>\n        <h1>Score: {score}</h1>\n      </div>\n\n      <div className='container'>\n        {cards.map((card, index) =>\n          <Card card={card} key={index} index={index} onClick={handleCardClick} />\n        )}\n      </div>\n      {isGameOver && (\n        <div className=\"overlay\">\n          <div className=\"overlay-content\">\n            <p>Game over! Your score is {score}.</p>\n            <button onClick={resetGame}>Play Again</button>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Cards\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}