{"ast":null,"code":"var _jsxFileName = \"/Users/tequam/Projects/memory-game/src/components/Cards.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport Card from './Card';\nimport { shuffledCards } from '../utils/ShuffleArray';\nimport Overlay from './Overlay';\nimport styled from 'styled-components';\nimport { Button, Text } from '../styles/globalStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = () => {\n  _s();\n  const [cards, setCards] = useState(shuffledCards);\n  const [score, setScore] = useState(0);\n  const [disabled, setDisabled] = useState(false);\n  const prevIndex = useRef(-1);\n  const resetGame = () => {\n    if (disabled) return;\n    setCards(shuffledCards);\n    prevIndex.current = -1;\n    setScore(0);\n    setDisabled(false);\n  };\n  const handleCardClick = index => {\n    const currCard = cards[index];\n    const prevCard = cards[prevIndex.current];\n    if (currCard.state === 'matched' || disabled) return;\n    updateStatus([currCard], 'flipped');\n    if (!prevCard || prevIndex.current === index) {\n      prevIndex.current = index;\n      return;\n    }\n    setDisabled(true);\n    setTimeout(() => {\n      if (currCard.id === prevCard.id) {\n        updateStatus([currCard, prevCard], 'matched');\n        setScore(prevScore => prevScore + 1);\n        setDisabled(false);\n      } else {\n        updateStatus([currCard, prevCard], '');\n        setScore(prevScore => prevScore - 1);\n        setDisabled(false);\n      }\n    }, 2000);\n    prevIndex.current = -1;\n  };\n  const updateStatus = (newCards, state) => {\n    newCards.forEach(card => card.state = state);\n    setCards([...newCards]);\n  };\n  const isGameOver = cards.every(card => card.state === 'matched');\n  return /*#__PURE__*/_jsxDEV(GameWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(RightSideWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: resetGame,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardsContainer, {\n      children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n        card: card,\n        index: index,\n        onClick: handleCardClick\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), isGameOver && /*#__PURE__*/_jsxDEV(Overlay, {\n      onClick: resetGame,\n      score: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Cards, \"E44LeOxL/0Ib3VGroi/X5vkiEEU=\");\n_c = Cards;\nconst GameWrapper = styled.div`\n  display: flex;\n`;\n_c2 = GameWrapper;\nconst CardsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, auto);\n  grid-template-rows: repeat(4, auto);\n  gap: 20px;\n`;\n_c3 = CardsContainer;\nconst RightSideWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  padding-right: 150px;\n`;\n_c4 = RightSideWrapper;\nexport default Cards;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Cards\");\n$RefreshReg$(_c2, \"GameWrapper\");\n$RefreshReg$(_c3, \"CardsContainer\");\n$RefreshReg$(_c4, \"RightSideWrapper\");","map":{"version":3,"names":["React","useRef","useState","Card","shuffledCards","Overlay","styled","Button","Text","jsxDEV","_jsxDEV","Cards","_s","cards","setCards","score","setScore","disabled","setDisabled","prevIndex","resetGame","current","handleCardClick","index","currCard","prevCard","state","updateStatus","setTimeout","id","prevScore","newCards","forEach","card","isGameOver","every","GameWrapper","children","RightSideWrapper","onClick","fileName","_jsxFileName","lineNumber","columnNumber","CardsContainer","map","_c","div","_c2","_c3","_c4","$RefreshReg$"],"sources":["/Users/tequam/Projects/memory-game/src/components/Cards.tsx"],"sourcesContent":["import React, { useRef, useState } from 'react'\nimport Card from './Card'\nimport { shuffledCards } from '../utils/ShuffleArray';\nimport { CardType } from '../types/CardType';\nimport Overlay from './Overlay';\nimport styled from 'styled-components'\nimport { Button, Text } from '../styles/globalStyles';\n\nconst Cards = () => {\n  const [cards, setCards] = useState<CardType[]>(shuffledCards);\n  const [score, setScore] = useState(0);\n  const [disabled, setDisabled] = useState(false)\n  const prevIndex = useRef(-1)\n\n  const resetGame = () => {\n    if(disabled) return\n\n    setCards(shuffledCards)\n    prevIndex.current = -1\n    setScore(0)\n    setDisabled(false)\n  }\n\n  const handleCardClick = (index: number) => {\n    const currCard = cards[index];\n    const prevCard = cards[prevIndex.current];\n\n    if (currCard.state === 'matched' || disabled) return;\n\n    updateStatus([currCard], 'flipped');\n\n    if (!prevCard || prevIndex.current === index) {\n      prevIndex.current = index;\n      return;\n    }\n\n      setDisabled(true)\n      setTimeout(() => {\n        if (currCard.id === prevCard.id) {\n          updateStatus([currCard, prevCard], 'matched');\n          setScore((prevScore) => prevScore + 1);\n          setDisabled(false)\n        } else {\n          updateStatus([currCard, prevCard], '')\n          setScore((prevScore) => prevScore - 1);\n          setDisabled(false)\n        }\n    }, 2000)\n\n      prevIndex.current = -1;\n  };\n\n  const updateStatus = (newCards: CardType[], state: 'flipped' | 'matched' | '') =>{\n      newCards.forEach((card) => (card.state = state))\n      setCards([...newCards])\n  }\n\n  const isGameOver = cards.every((card) => card.state === 'matched');\n\n  return(\n    <GameWrapper>\n      <RightSideWrapper>\n        <Button onClick={resetGame}>New Game</Button>\n        <Text>Score: {score}</Text>\n      </RightSideWrapper>\n\n      <CardsContainer>\n        {cards.map((card, index) =>\n          <Card card={card} key={index} index={index} onClick={handleCardClick} />\n        )}\n      </CardsContainer>\n      {isGameOver && (\n        <Overlay onClick={resetGame} score={score} />\n      )}\n    </GameWrapper>\n  )\n}\n\nconst GameWrapper = styled.div`\n  display: flex;\n`\nconst CardsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, auto);\n  grid-template-rows: repeat(4, auto);\n  gap: 20px;\n`\nconst RightSideWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  padding-right: 150px;\n`\nexport default Cards\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}